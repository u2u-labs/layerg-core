# docker build .. -f Dockerfile.local -t layerg:dev

FROM golang:1.23-bookworm AS builder

ENV GOOS linux
ENV CGO_ENABLED 1

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y --no-install-recommends ca-certificates gcc libc6-dev

WORKDIR /go/build/layerg

COPY . .

RUN go build -o /go/build-out/layerg -trimpath -mod=vendor -gcflags "-trimpath $PWD" -asmflags "-trimpath $PWD" -ldflags "-s -w -X main.version=local"

FROM debian:bookworm-slim

LABEL LayerG Labs <support@layerg.xyz>

ARG version

LABEL version=$version
LABEL variant=layerg
LABEL description="Distributed server for social and realtime games and apps."

RUN mkdir -p /layerg/data/modules && \
    apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y --no-install-recommends ca-certificates tzdata iproute2 tini && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /layerg/
COPY --from=builder "/go/build-out/layerg" /layerg/
EXPOSE 7349 7350 7351

ENTRYPOINT ["tini", "--", "/layerg/layerg"]

HEALTHCHECK --interval=30s --timeout=10s \
  CMD /layerg/layerg healthcheck || exit 1
